{"path":"07 日记/2025/2025-04/2025-04-21_星期一.md_Attachments/b2dac3147713b717cecef3cca7745a58_MD5.jpg","text":"'subsequent ransmission. S0, arer receipt of the acknowledgment, the groups will 100K like Tnis (Elgure ZUd). 1. Bytes Sent And Acknowledged: Bytes 1 to 36 2. Bytes Sent But Not Yet Acknowledged: Bytes 37 to 51 3. Bytes Not Yet Sent For Which Recipient Is Ready: Bytes 52 to 56 4. Bytes Not Yet Sent For Which Recipient Is Not Ready: Bytes 57 to 95 This process will occur each time an acknowledgment is received, causing the window to slide across the entire stream to be transmitted. And thus, ladies and gentlemen, we have the TCP siiding window acknowledgment system. It is a very powerful technique, which allows TCP to easily acknowledge an arbitrary number of bytes using a single acknowledgment number, thus providing reliabiliy to the byte-oriented protocol without spending time on an excessive number of acknowledgments. For simplicity, the example above leaves the window size constant, but in reality it can be adjusted to allow a recipient to control the rate at which data is sent, enabling flow control and congestion handling (Previous Send Send Window New Usable Window Position) (Slides 5 Bytes To The Right) Window — 1 | ESS— Category #1 Category #2 Category #3 Cat#4 Figure 209: Sliding The TCP Send Window After receiving acknowledgment for bytes 32 to 36, they move from category #2 to #1. The send window of Figure 208 slides right by five bytes; shifting five bytes from category #4 to #3, opening a new usable window. Key Concept: When a device gets an acknowledgment for a range of bytes, it knows they have been successfully received by their destination. It moves them from the “sent but unacknowledged” to the “sent and acknowledged” category. This causes the send window to slide to the right, allowing the device to send more data","libVersion":"0.5.0","langs":"eng"}